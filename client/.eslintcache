[{"/home/user/work/todo-react-redux/src/index.js":"1","/home/user/work/todo-react-redux/src/App.js":"2","/home/user/work/todo-react-redux/src/components/FormAuthorization/FormAuthorization.jsx":"3","/home/user/work/todo-react-redux/src/components/TodoApp/TodoApp.jsx":"4","/home/user/work/todo-react-redux/src/components/TodoApp/Todo/Todo.jsx":"5","/home/user/work/todo-react-redux/src/components/TodoApp/Todo/TodoItem/TodoItem.jsx":"6","/home/user/work/todo-react-redux/src/components/TodoApp/Todo/TodoFilter/TodoFilter.jsx":"7","/home/user/work/todo-react-redux/src/store.js":"8","/home/user/work/todo-react-redux/src/reducers/FilterReducer.js":"9","/home/user/work/todo-react-redux/src/reducers/TaskReducer.js":"10","/home/user/work/todo-react-redux/src/reducers/FormReducer.js":"11","/home/user/work/todo-react-redux/src/actions.js":"12","/home/user/work/todo-react-redux/src/action-creators/task-action-creator.js":"13","/home/user/work/todo-react-redux/src/action-creators/form-action-creator.js":"14","/home/user/work/todo-react-redux/src/action-creators/filter-action-creator.js":"15","/home/user/work/todo-react-redux/src/components/TodoApp/Header/Header.jsx":"16","/home/user/work/todo-react-redux/src/components/About/About.jsx":"17","/home/user/work/todo-react-redux/src/components/FormAuthorization/FormHeader/FormHeader.jsx":"18","/home/user/work/todo-react-redux/src/components/TodoApp/Todo/TodoCallback/TodoCallback.jsx":"19","/home/user/work/services/client/src/index.js":"20","/home/user/work/services/client/src/App.js":"21","/home/user/work/services/client/src/components/About/About.jsx":"22","/home/user/work/services/client/src/components/TodoApp/TodoApp.jsx":"23","/home/user/work/services/client/src/components/FormAuthorization/FormAuthorization.jsx":"24","/home/user/work/services/client/src/components/TodoApp/Todo/TodoCallback/TodoCallback.jsx":"25","/home/user/work/services/client/src/components/TodoApp/Todo/Todo.jsx":"26","/home/user/work/services/client/src/components/TodoApp/Header/Header.jsx":"27","/home/user/work/services/client/src/components/FormAuthorization/FormHeader/FormHeader.jsx":"28","/home/user/work/services/client/src/components/TodoApp/Todo/TodoItem/TodoItem.jsx":"29","/home/user/work/services/client/src/components/TodoApp/Todo/TodoFilter/TodoFilter.jsx":"30","/home/user/work/services/client/src/reducers/FilterReducer/actions.js":"31","/home/user/work/services/client/src/reducers/FilterReducer/action-creator.js":"32","/home/user/work/services/client/src/reducers/TaskReducer/action-creator.js":"33","/home/user/work/services/client/src/reducers/TaskReducer/actions.js":"34","/home/user/work/services/client/src/reducers/FilterReducer/index.js":"35","/home/user/work/services/client/src/reducers/TaskReducer/index.js":"36","/home/user/work/services/client/src/components/PrivateRoute/PrivateRoute.js":"37","/home/user/work/services/client/src/reducers/index.js":"38","/home/user/work/services/client/src/reducers/AuthReducer/action-creator.js":"39","/home/user/work/services/client/src/reducers/AuthReducer/index.js":"40","/home/user/work/services/client/src/reducers/AuthReducer/actions.js":"41","/home/user/work/services/client/src/components/TodoApp/Error/Error.jsx":"42","/home/user/work/services/client/src/services/TokenService.js":"43","/home/user/work/services/client/src/services/ApiService.js":"44"},{"size":298,"mtime":1612788978238,"results":"45","hashOfConfig":"46"},{"size":1020,"mtime":1613650936364,"results":"47","hashOfConfig":"46"},{"size":3393,"mtime":1613653130351,"results":"48","hashOfConfig":"46"},{"size":472,"mtime":1613651494504,"results":"49","hashOfConfig":"46"},{"size":2706,"mtime":1613651103654,"results":"50","hashOfConfig":"46"},{"size":895,"mtime":1613650872749,"results":"51","hashOfConfig":"46"},{"size":3733,"mtime":1612948049906,"results":"52","hashOfConfig":"46"},{"size":669,"mtime":1612788978230,"results":"53","hashOfConfig":"46"},{"size":331,"mtime":1612791309406,"results":"54","hashOfConfig":"46"},{"size":3509,"mtime":1613649688704,"results":"55","hashOfConfig":"46"},{"size":2275,"mtime":1613127541860,"results":"56","hashOfConfig":"46"},{"size":1434,"mtime":1613127419018,"results":"57","hashOfConfig":"46"},{"size":4352,"mtime":1613647332472,"results":"58","hashOfConfig":"46"},{"size":2297,"mtime":1613653130359,"results":"59","hashOfConfig":"46"},{"size":345,"mtime":1612791309402,"results":"60","hashOfConfig":"46"},{"size":706,"mtime":1612794856619,"results":"61","hashOfConfig":"46"},{"size":1473,"mtime":1613134381396,"results":"62","hashOfConfig":"46"},{"size":370,"mtime":1613134381404,"results":"63","hashOfConfig":"46"},{"size":734,"mtime":1613483517465,"results":"64","hashOfConfig":"46"},{"size":391,"mtime":1614773630425,"results":"65","hashOfConfig":"66"},{"size":928,"mtime":1613818062683,"results":"67","hashOfConfig":"66"},{"size":1473,"mtime":1613134381396,"results":"68","hashOfConfig":"66"},{"size":428,"mtime":1614177977862,"results":"69","hashOfConfig":"66"},{"size":3395,"mtime":1614768549145,"results":"70","hashOfConfig":"66"},{"size":529,"mtime":1614769074958,"results":"71","hashOfConfig":"66"},{"size":2729,"mtime":1614149981785,"results":"72","hashOfConfig":"66"},{"size":502,"mtime":1614769107193,"results":"73","hashOfConfig":"66"},{"size":370,"mtime":1613134381404,"results":"74","hashOfConfig":"66"},{"size":893,"mtime":1613805421150,"results":"75","hashOfConfig":"66"},{"size":3137,"mtime":1613805421154,"results":"76","hashOfConfig":"66"},{"size":319,"mtime":1613803822227,"results":"77","hashOfConfig":"66"},{"size":338,"mtime":1613803822219,"results":"78","hashOfConfig":"66"},{"size":4555,"mtime":1614773630429,"results":"79","hashOfConfig":"66"},{"size":687,"mtime":1613825942567,"results":"80","hashOfConfig":"66"},{"size":314,"mtime":1613802945207,"results":"81","hashOfConfig":"66"},{"size":3875,"mtime":1614773060564,"results":"82","hashOfConfig":"66"},{"size":349,"mtime":1613993400472,"results":"83","hashOfConfig":"66"},{"size":488,"mtime":1614773991753,"results":"84","hashOfConfig":"66"},{"size":1976,"mtime":1614773991757,"results":"85","hashOfConfig":"66"},{"size":2112,"mtime":1614768169311,"results":"86","hashOfConfig":"66"},{"size":468,"mtime":1613804381101,"results":"87","hashOfConfig":"66"},{"size":185,"mtime":1614773316476,"results":"88","hashOfConfig":"66"},{"size":556,"mtime":1614773757400,"results":"89","hashOfConfig":"66"},{"size":2281,"mtime":1614773683916,"results":"90","hashOfConfig":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"wl74d0",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"93"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},"1nz8k9y",{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"133"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"133"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"133"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"133"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"133"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"186","usedDeprecatedRules":"133"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},"/home/user/work/todo-react-redux/src/index.js",[],["189","190"],"/home/user/work/todo-react-redux/src/App.js",[],"/home/user/work/todo-react-redux/src/components/FormAuthorization/FormAuthorization.jsx",["191"],"/home/user/work/todo-react-redux/src/components/TodoApp/TodoApp.jsx",[],"/home/user/work/todo-react-redux/src/components/TodoApp/Todo/Todo.jsx",["192"],"/home/user/work/todo-react-redux/src/components/TodoApp/Todo/TodoItem/TodoItem.jsx",[],"/home/user/work/todo-react-redux/src/components/TodoApp/Todo/TodoFilter/TodoFilter.jsx",[],"/home/user/work/todo-react-redux/src/store.js",[],"/home/user/work/todo-react-redux/src/reducers/FilterReducer.js",[],"/home/user/work/todo-react-redux/src/reducers/TaskReducer.js",[],"/home/user/work/todo-react-redux/src/reducers/FormReducer.js",[],"/home/user/work/todo-react-redux/src/actions.js",[],"/home/user/work/todo-react-redux/src/action-creators/task-action-creator.js",["193"],"import {\n    ADD_TODO_ALL_SUCCESS,\n    ADD_TODO_COMPLETED_SUCCESS,\n    ADD_TODO_DELETE_SUCCESS,\n    ADD_TODO_FAILURE,\n    ADD_TODO_STARTED,\n    ADD_TODO_SUCCESS,\n    ALL_TASK_COMPLETED, ALL_TASK_DELETE, ALL_TODO_COMPLETED_SUCCESS, ALL_TODO_DELETE_SUCCESS,\n    COMPLETED_TASK,\n    DELETE_TASK,\n    SET_TODOS,\n    UPDATE_NEW_TASK\n} from \"../actions\";\nimport axios from \"axios\";\nimport {authorizationFailureAC} from \"./form-action-creator\";\n\n\nexport const addTodoStarted = () => {\n    return {type: ADD_TODO_STARTED}\n}\nexport const todoFailure = (error) => {\n    return {type: ADD_TODO_FAILURE, error}\n}\n\n\nexport const updateNewTaskActionCreator = (text) => {\n    return {type: UPDATE_NEW_TASK, text: text}\n}\n\nexport const deleteTaskActionCreator = (taskID) => {\n    return {type: DELETE_TASK, id: taskID}\n}\n\nexport const completedTaskActionCreator = (taskID) => {\n    return {type: COMPLETED_TASK, id: taskID,}\n}\n\n\n\nexport const AllDeleteTaskActionCreator = () => {\n    return {type: ALL_TASK_DELETE}\n}\n\nexport const setTodosActionCreator = (todos) => {\n    return {type: SET_TODOS, todos}\n}\n\n\n\n//Добавляем одну таску\nexport const addTodoSuccess = (todo) => {\n    return {type: ADD_TODO_SUCCESS, todo}\n}\nexport const addTodoActionCreator = (message) => (dispatch) => {\n    dispatch(addTodoStarted());\n    axios\n        .post(`/todo`, {\n            completed: false,\n            message\n        }, {headers: {\"Token\": localStorage.getItem(\"Token\")}})\n        .then(response => {\n            dispatch(addTodoSuccess(response.data));\n        })\n        .catch(err => {\n            dispatch(authorizationFailureAC(err.message, err.response.data));\n        })\n}\n\n//  Добавляем все таски при загрузке\nexport const addTodoALLSuccess = (todos) => {\n    return {type: ADD_TODO_ALL_SUCCESS, todos}\n}\nexport const addTodoAllActionCreator = () => (dispatch) => {\n    dispatch(addTodoStarted());\n    axios\n        .get(`/todo`, {headers: {\"Token\": localStorage.getItem(\"Token\")}})\n        .then(response => {\n            dispatch(addTodoALLSuccess(response.data));\n        })\n        .catch(err => {\n            dispatch(authorizationFailureAC(err.message, err.response.data));\n        })\n}\n\n// Комплитим одну таску\nexport const todoCompletedSuccess = (todo) => {\n    return {type: TODO_COMPLETED_SUCCESS, todo}\n}\nexport const todoCompletedAC = (todoID, todoCompleted) => (dispatch) => {\n    dispatch(addTodoStarted());\n    axios\n        .put(`/todo/${todoID}`, {\n            id: todoID,\n            completed: !todoCompleted,\n        }, {headers: {\"Token\": localStorage.getItem(\"Token\")}})\n        .then(response => {\n            console.log(response.data)\n            dispatch(todoCompletedSuccess(response.data));\n        })\n        .catch(err => {\n            dispatch(authorizationFailureAC(err.message, err.response.data));\n        })\n}\n\n// Комплитим все таски\nexport const allTodoCompletedSuccess = () => {\n    return {type: ALL_TODO_COMPLETED_SUCCESS}\n}\nexport const allTodoCompletedAC = () => (dispatch) => {\n    dispatch(addTodoStarted());\n    axios\n        .post(`/todo/all-todo-completed`,{},{headers: {\"Token\": localStorage.getItem(\"Token\")}} )\n        .then(response => {\n            dispatch(allTodoCompletedSuccess(response.data));\n        })\n        .catch(err => {\n            dispatch(authorizationFailureAC(err.message, err.response.data));\n        })\n}\n\n// Удаляем одну таску\nexport const todoDeleteSuccess = (todoID) => {\n    return {type: ADD_TODO_DELETE_SUCCESS, id: todoID}\n}\nexport const deleteTodoActionCreator = (todoID) => (dispatch) => {\n    dispatch(addTodoStarted());\n    axios\n        .delete(`/todo/${todoID}`, {headers: {\"Token\": localStorage.getItem(\"Token\")}})\n        .then(response => {\n            dispatch(todoDeleteSuccess(todoID));\n        })\n        .catch(err => {\n            dispatch(authorizationFailureAC(err.message, err.response.data));\n        })\n}\n\n// Удаляем все таски\nexport const allTodoDeleteSuccess = (todoID) => {\n    return {type: ALL_TODO_DELETE_SUCCESS, id: todoID}\n}\nexport const AllTodoDeleteActionCreator = () => (dispatch) => {\n    dispatch(addTodoStarted());\n    axios\n        .post(`/todo/all-todo-delete`, {completed: true}, {headers: {\"Token\": localStorage.getItem(\"Token\")}})\n        .then(response => {\n            dispatch(allTodoDeleteSuccess());\n        })\n        .catch(err => {\n            dispatch(authorizationFailureAC(err.message, err.response.data));\n        })\n}","/home/user/work/todo-react-redux/src/action-creators/form-action-creator.js",[],"/home/user/work/todo-react-redux/src/action-creators/filter-action-creator.js",[],"/home/user/work/todo-react-redux/src/components/TodoApp/Header/Header.jsx",[],"/home/user/work/todo-react-redux/src/components/About/About.jsx",[],"/home/user/work/todo-react-redux/src/components/FormAuthorization/FormHeader/FormHeader.jsx",[],"/home/user/work/todo-react-redux/src/components/TodoApp/Todo/TodoCallback/TodoCallback.jsx",[],"/home/user/work/services/client/src/index.js",[],["194","195"],"/home/user/work/services/client/src/App.js",[],"/home/user/work/services/client/src/components/About/About.jsx",[],"/home/user/work/services/client/src/components/TodoApp/TodoApp.jsx",[],"/home/user/work/services/client/src/components/FormAuthorization/FormAuthorization.jsx",["196"],"import style from './FormAuthorization.module.css'\nimport FormHeader from \"./FormHeader/FormHeader\";\nimport {userLogin, userNameUpdate, userPasswordUpdate, userRegistration\n} from \"../../reducers/AuthReducer/action-creator\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\n\nconst FormAuthorization = () => {\n\n    const dispatch = useDispatch()\n    const {username, password, messages, error} = useSelector(state => state.AuthReducer)\n    const isAuth = useSelector(state => state.AuthReducer.isAuth)\n    const userRegistrationHandler = (e) => {\n        e.preventDefault()\n        dispatch(userRegistration(username, password))\n    }\n\n    const userLoginHandler = (e) => {\n        e.preventDefault()\n        dispatch(userLogin(username, password))\n    }\n\n    const err = (error) => {\n        if (error.errors) {\n            return error.errors.errors.map(err => err.msg)\n        }\n    }\n\n    return (\n        <div className={style.app__wrapper}>\n            <FormHeader />\n            <div className={style.wrapper}>\n                <form action=\"\">\n                    <div className={style.item}>\n                        <label className={style.label} htmlFor=\"\">User name:</label>\n                        <input\n                            className={style.input}\n                            type=\"text\"\n                            value={username}\n                            placeholder='Enter your user name'\n                            onChange={(e) => dispatch(userNameUpdate(e.target.value))}\n                            autoFocus={true}\n                        />\n                    </div>\n                    <div className={style.item}>\n                        <label className={style.label} htmlFor=\"\">Password:</label>\n                        <input\n                            className={style.input}\n                            type=\"password\"\n                            value={password}\n                            placeholder='Please enter your password'\n                            onChange={(e) => dispatch(userPasswordUpdate(e.target.value))}\n                        />\n                    </div>\n                    <div className={`${style.item} ${style.item__btn}`}>\n                        <button\n                            className={`${style.btn}`}\n                            onClick={userLoginHandler}\n                        >\n                            Log in\n                        </button>\n                        <button\n                            className={`${style.btn}`}\n                            onClick={userRegistrationHandler}\n                        >\n                            Register\n                        </button>\n                        <a href=\"http://localhost:8080/todo/auth/facebook\">Login with Facebook</a>\n                    </div>\n                </form>\n                {\n                    error && <div>\n                            <span className={`${style.message} ${style.message__error}`}>{error.message}</span>\n                            {error.errors && err(error).map(message => <span\n                                className={`${style.message} ${style.message__error}`}>{message}</span>)}\n                        </div>\n                }\n            </div>\n            {isAuth && <Redirect to=\"/todo\"/> }\n        </div>\n    )\n}\n\nexport default FormAuthorization\n","/home/user/work/services/client/src/components/TodoApp/Todo/TodoCallback/TodoCallback.jsx",[],"/home/user/work/services/client/src/components/TodoApp/Todo/Todo.jsx",["197"],"import React from 'react'\nimport TodoItem from \"./TodoItem/TodoItem\";\nimport './Todo.css'\nimport TodoFilter from \"./TodoFilter/TodoFilter\";\nimport {useMemo} from \"react\";\nimport {useEffect} from \"react\";\nimport {SORT_ALL_TASK, SORT_COMPLETED_TASK, SORT_CURRENT_TASK} from \"../../../reducers/FilterReducer/actions\";\nimport {addAllTodos, addTodo, updateNewTask} from \"../../../reducers/TaskReducer/action-creator\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport '../../../Image/dustbin.svg'\nimport { debounce } from 'lodash';\n\nconst getVisibleTodos = (filterTodos, todos) => {\n    switch (filterTodos) {\n        case SORT_ALL_TASK:\n            return todos\n        case SORT_COMPLETED_TASK:\n            return todos.filter(t => t.completed)\n        case SORT_CURRENT_TASK:\n            return todos.filter(t => !t.completed)\n        default:\n            throw new Error('Unknown filter: ' + filterTodos)\n    }\n}\n\nconst Todo = () => {\n    const dispatch = useDispatch()\n    const {tasks, newTask, loading} = useSelector(state => state.TaskReducer);\n    const filterTodos = useSelector(state => state.FilterReducer);\n\n    useEffect(() => {\n        dispatch(addAllTodos())\n    }, []);\n\n    const memo = useMemo(() => getVisibleTodos(filterTodos, tasks), [filterTodos, tasks])\n\n\n    const validation = (value) => {\n        const reg = /^\\s*$/;\n        return !reg.test(value)\n    }\n\n    const onAddTask = (e) => {\n        if (e.key === 'Enter' && validation(newTask)) {\n            dispatch(addTodo(newTask))\n        }\n    }\n\n    const onAddTaskDebounce = debounce(onAddTask,500)\n\n    const onChangeInput = (e) => {\n        const text = e.target.value\n        dispatch(updateNewTask(text))\n    }\n    return (\n        <div className=\"todo\">\n            {\n                loading && <div className='loader-wrapper'>\n                    <div className=\"loader\"></div>\n                </div>\n            }\n            <div className=\"todo__input-wrapper\">\n                <input\n                    className=\"todo__input\"\n                    type=\"text\"\n                    placeholder='Enter your task name here'\n                    value={newTask}\n                    onChange={onChangeInput}\n                    onKeyDown={onAddTaskDebounce}\n                    autoFocus={true}\n                />\n            </div>\n            <div className=\"todo__list\">\n                <ul>\n                    {\n                        memo.map((task) => <TodoItem\n                            task={task}\n                            key={task.id}\n                        />)\n                    }\n\n                </ul>\n            </div>\n            {tasks.length > 0 && <TodoFilter/>}\n        </div>\n    )\n}\n\nexport default Todo\n\n","/home/user/work/services/client/src/components/TodoApp/Header/Header.jsx",[],"/home/user/work/services/client/src/components/FormAuthorization/FormHeader/FormHeader.jsx",[],"/home/user/work/services/client/src/components/TodoApp/Todo/TodoItem/TodoItem.jsx",[],"/home/user/work/services/client/src/components/TodoApp/Todo/TodoFilter/TodoFilter.jsx",[],"/home/user/work/services/client/src/reducers/FilterReducer/actions.js",[],"/home/user/work/services/client/src/reducers/FilterReducer/action-creator.js",[],["198","199"],"/home/user/work/services/client/src/reducers/TaskReducer/action-creator.js",["200"],"import {\n    ADD_TODO_ALL_SUCCESS,\n    ADD_TODO_FAILURE,\n    ADD_TODO_STARTED,\n    ADD_TODO_SUCCESS,\n    ALL_TODO_COMPLETED_SUCCESS,\n    ALL_TODO_DELETE_SUCCESS,\n    COMPLETED_TASK, ERROR_MESSAGE,\n    SET_TODOS,\n    TODO_COMPLETED_SUCCESS,\n    TODO_DELETE_SUCCESS,\n    UPDATE_NEW_TASK\n} from \"./actions\";\nimport {ALL_TASK_DELETE} from \"../FilterReducer/actions\";\nimport axios from \"axios\";\nimport {authorizationFailure} from \"../AuthReducer/action-creator\";\nimport store from \"../../reducers\";\nimport ApiService from \"../../services/ApiService\";\n\nexport const addTodoStarted = () => {\n    return {type: ADD_TODO_STARTED}\n}\nexport const todoFailure = (error) => {\n    return {type: ADD_TODO_FAILURE, error}\n}\n\nexport const updateNewTask = (text) => {\n    return {type: UPDATE_NEW_TASK, text: text}\n}\n\nexport const completedTaskActionCreator = (taskID) => {\n    return {type: COMPLETED_TASK, id: taskID,}\n}\n\nexport const AllDeleteTaskActionCreator = () => {\n    return {type: ALL_TASK_DELETE}\n}\n\nexport const setTodosActionCreator = (todos) => {\n    return {type: SET_TODOS, todos}\n}\n\nexport const errorMessage = (error) => {\n    return {type: ERROR_MESSAGE, error}\n}\n\nconst dispatch = store.dispatch\nconst axiosInst = axios.create()\n\naxiosInst.interceptors.request.use(function (config) {\n    config.headers.Token = localStorage.getItem(\"Token\")\n    return config;\n}, function (err) {\n    return Promise.reject(err)\n})\n\naxiosInst.interceptors.response.use(function (response) {\n    return response;\n}, function (err) {\n    return Promise.reject(err)\n        .catch(err => {\n            if (err.response.status === 403) {\n                console.log('ошибка 403')\n                dispatch(authorizationFailure(err.message, err.response.data))\n            } else if (err.response.status === 410) {\n                dispatch(errorMessage(err.response.statusText, err.response.data))\n            } else {\n                console.log('ошибка')\n                dispatch(errorMessage(err.response.statusText, err.response.data))\n            }\n        });\n})\n\n // Добавляем все таски при загрузке\nexport const addTodoALLSuccess = (todos) => {\n    return {type: ADD_TODO_ALL_SUCCESS, todos}\n}\nexport const addAllTodos = () => (dispatch) => {\n    dispatch(addTodoStarted());\n    ApiService\n        .get(`/todo`)\n        .then(response => {\n            dispatch(addTodoALLSuccess(response))\n        })\n}\n\n// Добавляем одну таску\nexport const addTodoSuccess = (todo) => {\n    return {type: ADD_TODO_SUCCESS, todo}\n}\nexport const addTodo = (message) => (dispatch) => {\n    dispatch(addTodoStarted())\n    ApiService\n        .post(`/todo`, {\n            completed: false,\n            message\n        })\n        .then(response => {\n            dispatch(addTodoSuccess(response))\n        })\n}\n\n// Комплитим одну таску\nexport const todoCompletedSuccess = (todo) => {\n    return {type: TODO_COMPLETED_SUCCESS, todo}\n}\nexport const todoCompleted = (todoID, todoCompleted) => (dispatch) => {\n    dispatch(addTodoStarted())\n    ApiService\n        .put(`/todo/${todoID}`, {\n            id: todoID,\n            completed: !todoCompleted\n        })\n        .then(response => {\n            console.log(response)\n            dispatch(todoCompletedSuccess(response))\n        })\n        .catch(err => {\n            dispatch(errorMessage(err))\n            dispatch(todoDeleteSuccess(todoID))\n        })\n}\n\n// Комплитим все таски\nexport const allTodoCompletedSuccess = () => {\n    return {type: ALL_TODO_COMPLETED_SUCCESS}\n}\nexport const allTodoCompleted = () => (dispatch) => {\n    dispatch(addTodoStarted())\n    ApiService\n        .post(`/todo/all-todo-completed`)\n        .then(response => {\n            dispatch(allTodoCompletedSuccess(response))\n        })\n}\n\n// Удаляем одну таску\nexport const todoDeleteSuccess = (todoID) => {\n    return {type: TODO_DELETE_SUCCESS, id: todoID}\n}\nexport const todoDelete = (todoID) => (dispatch) => {\n    dispatch(addTodoStarted());\n    ApiService\n        .delete(`/todo/${todoID}`)\n        .then(response => {\n            dispatch(todoDeleteSuccess(todoID))\n        })\n}\n\n// Удаляем все таски\nexport const allTodoDeleteSuccess = (todoID) => {\n    return {type: ALL_TODO_DELETE_SUCCESS, id: todoID}\n}\nexport const AllTodoDelete = () => (dispatch) => {\n    dispatch(addTodoStarted());\n    ApiService\n        .post(`/todo/all-todo-delete`)\n        .then(response => {\n            dispatch(allTodoDeleteSuccess());\n        })\n}","/home/user/work/services/client/src/reducers/TaskReducer/actions.js",[],"/home/user/work/services/client/src/reducers/FilterReducer/index.js",[],"/home/user/work/services/client/src/reducers/TaskReducer/index.js",["201"],"import {\n    ADD_TODO_ALL_SUCCESS, ADD_TODO_FAILURE,\n    ADD_TODO_STARTED, ADD_TODO_SUCCESS,\n    ALL_TODO_COMPLETED_SUCCESS, ALL_TODO_DELETE_SUCCESS,\n    COMPLETED_TASK,\n    DELETE_TASK, ERROR_MESSAGE,\n    SET_TODOS, STATUS_TEXT, TODO_COMPLETED_SUCCESS, TODO_DELETE_SUCCESS,\n    UPDATE_NEW_TASK\n} from \"./actions\";\n\nimport {ALL_TASK_DELETE} from \"../FilterReducer/actions\"\n\nconst initialState = {\n    tasks: [],\n    newTask: '',\n    loading: false,\n    error: false\n}\n\nconst TaskReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case UPDATE_NEW_TASK:\n            return {\n                ...state,\n                newTask: action.text,\n            }\n\n        case DELETE_TASK:\n            return {\n                ...state,\n                tasks: [...state.tasks.filter((task) => task.id !== action.id)]\n            }\n\n        case COMPLETED_TASK:\n            return {\n                ...state,\n                tasks: [...state.tasks.map((task) => {\n                    if (task.id === action.id) {\n                        task.completed = !task.completed\n                    }\n                    return task\n                })]\n            }\n\n        case ALL_TODO_COMPLETED_SUCCESS:\n            return {\n                ...state,\n                tasks: [...state.tasks.map((task) => {\n                    task.completed = true\n                    return task\n                })],\n                loading: false,\n                error: false\n            }\n\n        case ALL_TASK_DELETE:\n            return {\n                ...state,\n                tasks: [...state.tasks.filter((task) => !task.completed)]\n            }\n\n        case SET_TODOS:\n            return {\n                ...state,\n                tasks: action.todos\n            }\n\n        case ADD_TODO_STARTED:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case ADD_TODO_SUCCESS:\n            const changeId = (todo) => {\n                todo.id = todo._id\n                delete todo._id\n                return todo\n            }\n            return {\n                ...state,\n                newTask: '',\n                tasks: [...state.tasks, changeId(action.todo)],\n                loading: false,\n                error: false\n            }\n        case ADD_TODO_ALL_SUCCESS:\n            return {\n                ...state,\n                tasks: action.todos.map(task => {\n                    task.id = task._id\n                    delete task._id\n                    return task\n                }),\n                loading: false,\n                error: false\n            }\n\n        case ADD_TODO_FAILURE:\n            return {\n                ...state,\n                error: action.error,\n                loading: false\n            }\n\n        case TODO_COMPLETED_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                error: false,\n                tasks: [...state.tasks.map((task) => {\n                    if (task.id === action.todo._id) {\n                        task.completed = action.todo.completed\n                    }\n                    return task\n                })],\n            }\n        case TODO_DELETE_SUCCESS:\n            return {\n                ...state,\n                tasks: [...state.tasks.filter(task => task.id !== action.id)],\n                loading: false,\n            }\n\n        case ALL_TODO_DELETE_SUCCESS:\n            return {\n                ...state,\n                tasks: [...state.tasks.filter(task => task.completed === false)],\n                loading: false\n            }\n\n        case ERROR_MESSAGE:\n            return {\n                ...state,\n                error: {...state.error = action.error},\n                loading: false\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default TaskReducer","/home/user/work/services/client/src/components/PrivateRoute/PrivateRoute.js",[],"/home/user/work/services/client/src/reducers/index.js",[],"/home/user/work/services/client/src/reducers/AuthReducer/action-creator.js",["202","203"],"import {\n    AUTHORIZATION_FAILURE, LOADING_STARTED, LOGIN_FAILURE, LOGIN_SUCCESS, REGISTRATION_FAILURE,\n    REGISTRATION_SUCCESS, USER_LOGOUT, USER_NAME_UPDATE, USER_PASSWORD_UPDATE\n} from \"./actions\";\nimport axios from \"axios\";\nimport store from \"../index\";\nimport TokenService from \"../../TokenService\";\nimport ApiService from \"../../ApiService\";\n\nexport const authorizationFailure = (error) => {\n    return {type: AUTHORIZATION_FAILURE, error}\n}\n\nexport const userLogout = () => {\n    TokenService.removeToken()\n    return {type: USER_LOGOUT}\n}\n\nexport const userNameUpdate = (username) => {\n    return {type: USER_NAME_UPDATE, username}\n}\n\nexport const userPasswordUpdate = (password) => {\n    return {type: USER_PASSWORD_UPDATE, password}\n}\n\nexport const loadingStarted = () => {\n    return {type: LOADING_STARTED}\n}\n\nexport const registrationSuccess = (messages) => {\n    return {type: REGISTRATION_SUCCESS, messages}\n}\n\nexport const registrationFailure = (err) => {\n    return {type: REGISTRATION_FAILURE, err}\n}\n\nexport const userRegistration = (username, password) => (dispatch) => {\n    dispatch(loadingStarted());\n    ApiService\n        .post(`/todo/registration`, {\n            username,\n            password\n        })\n        .then(response => {\n            dispatch(registrationSuccess(response));\n        })\n        .catch(err => {\n            dispatch(registrationFailure(err))\n        })\n}\n\nexport const loginSuccess = (token) => {\n    return {type: LOGIN_SUCCESS, token}\n}\nexport const loginFailure = (err) => {\n    return {type: LOGIN_FAILURE, err}\n}\n\nexport const userLogin = (username, password) => (dispatch) => {\n    dispatch(loadingStarted())\n    ApiService\n        .post(`/todo/login`, {\n            username,\n            password\n        })\n        .then(response => {\n            TokenService.setToken(response.token)\n            dispatch(loginSuccess(response.token))\n        })\n        .catch(err => {\n            console.log(err)\n            dispatch(loginFailure(err))\n        })\n}\n","/home/user/work/services/client/src/reducers/AuthReducer/index.js",[],"/home/user/work/services/client/src/reducers/AuthReducer/actions.js",[],"/home/user/work/services/client/src/components/TodoApp/Error/Error.jsx",[],"/home/user/work/services/client/src/services/TokenService.js",["204"],"class TokenService {\n    constructor() {\n        this.token = null\n        this.observers = []\n    }\n    subscribe(callback) {\n        this.observers.push(callback);\n    }\n    setToken(token) {\n        localStorage.setItem(\"Token\", token);\n        this.token = token;\n        this.observers.forEach(item => item(this.token))\n    }\n\n    getToken() {\n        return this.token\n    }\n\n    removeToken() {\n        this.token = localStorage.removeItem(\"Token\")\n        this.observers.forEach(item => item(this.token));\n    }\n}\n\nexport default new TokenService;\n","/home/user/work/services/client/src/services/ApiService.js",[],{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":70,"column":25,"nodeType":"211","endLine":70,"endColumn":92},{"ruleId":"212","severity":1,"message":"213","line":35,"column":8,"nodeType":"214","endLine":35,"endColumn":10,"suggestions":"215"},{"ruleId":"216","severity":1,"message":"217","line":8,"column":5,"nodeType":"218","messageId":"219","endLine":8,"endColumn":23},{"ruleId":"205","replacedBy":"220"},{"ruleId":"207","replacedBy":"221"},{"ruleId":"216","severity":1,"message":"222","line":11,"column":32,"nodeType":"218","messageId":"219","endLine":11,"endColumn":40},{"ruleId":"212","severity":1,"message":"213","line":34,"column":8,"nodeType":"214","endLine":34,"endColumn":10,"suggestions":"223"},{"ruleId":"205","replacedBy":"224"},{"ruleId":"207","replacedBy":"225"},{"ruleId":"216","severity":1,"message":"226","line":18,"column":8,"nodeType":"218","messageId":"219","endLine":18,"endColumn":20},{"ruleId":"216","severity":1,"message":"227","line":7,"column":16,"nodeType":"218","messageId":"219","endLine":7,"endColumn":27},{"ruleId":"216","severity":1,"message":"228","line":5,"column":8,"nodeType":"218","messageId":"219","endLine":5,"endColumn":13},{"ruleId":"216","severity":1,"message":"229","line":6,"column":8,"nodeType":"218","messageId":"219","endLine":6,"endColumn":13},{"ruleId":"230","severity":1,"message":"231","line":25,"column":16,"nodeType":"232","messageId":"233","endLine":25,"endColumn":32,"fix":"234"},"no-native-reassign",["235"],"no-negated-in-lhs",["236"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["237"],"no-unused-vars","'ALL_TASK_COMPLETED' is defined but never used.","Identifier","unusedVar",["235"],["236"],"'messages' is assigned a value but never used.",["238"],["235"],["236"],"'TokenService' is defined but never used.","'STATUS_TEXT' is defined but never used.","'axios' is defined but never used.","'store' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"239","text":"240"},"no-global-assign","no-unsafe-negation",{"desc":"241","fix":"242"},{"desc":"241","fix":"243"},[554,554],"()","Update the dependencies array to be: [dispatch]",{"range":"244","text":"245"},{"range":"246","text":"245"},[1166,1168],"[dispatch]",[1189,1191]]